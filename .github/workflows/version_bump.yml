name: Release

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        name: Checkout

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2
          bundler-cache: true
          cache-version: 1

      - name: Bump patch version
        id: version
        run: |
          version=$(awk -F. '{$NF+=1}1' OFS=. VERSION)
          echo "$version" > VERSION
          bundle install
          echo "VERSION=$version" >> "$GITHUB_OUTPUT"

      - name: Commit version
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout -b automated-bump-version-${{ steps.version.outputs.VERSION }}
          git add VERSION Gemfile.lock
          git commit -m "Bump version to v${{ steps.version.outputs.VERSION }}"
          git push origin automated-bump-version-${{ steps.version.outputs.VERSION }}

      - name: Open pull request, approve and turn on auto-merge
        uses: actions/github-script@v6
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            const response = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: automated-bump-version-${{ steps.version.outputs.VERSION }},
              base: main,
              title: "Bump version to v${{ steps.version.outputs.VERSION }}"
            });

            const pullRequestId = response.data.id;
            const pullRequestNumber = response.data.number;
            console.log(`Created pull request ${pullRequestNumber}`);

            await github.rest.pulls.createReview({
              pull_number: pullRequestNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              event: 'APPROVE',
            });
            console.log(`Approved pull request ${pullRequestNumber}`);

            const enableAutoMergeQuery = `mutation ($pullRequestId: ID!, $mergeMethod: PullRequestMergeMethod!) {
              enablePullRequestAutoMerge(input: {
                pullRequestId: $pullRequestId,
                mergeMethod: $mergeMethod
              }) {
                pullRequest {
                  autoMergeRequest {
                    enabledAt
                    enabledBy {
                      login
                    }
                  }
                }
              }
            }`;

            const data = {
              pullRequestId: pullRequestId,
              mergeMethod: 'MERGE',
            };

            await github.graphql(enableAutoMergeQuery, data);
            console.log(`Enabled auto-merge for pull request ${pullRequestNumber}`);
